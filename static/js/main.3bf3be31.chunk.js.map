{"version":3,"sources":["routes/Home.module.css","routes/Help/Help.module.css","components/Global/stylesheets/Video.module.css","components/Global/stylesheets/Canvas.module.css","components/Global/Button.js","components/Global/ImgButton.js","routes/logo.jpg","routes/Home.js","js/tts.js","js/nutrientsHandle.js","components/Global/Video.js","components/Global/Canvas.js","routes/Nutrients/Nutrients.js","js/read.js","js/recommended.js","routes/Nutrients/NuResult.js","routes/Expiration/Expiration.js","js/stt.js","js/sttHandle.js","routes/Expiration/ExResult.js","routes/Restaurant/Restaurant.js","routes/Restaurant/ReResult.js","routes/Help/Help.js","App.js","index.js"],"names":["module","exports","Button","_ref","text","onClick","classname","_jsx","className","children","ImgButton","Home","navigate","useNavigate","navigateTo","path","console","log","_useState","useState","_useState2","_slicedToArray","_jsxs","styles","settingimg","aboutlogo","src","Logo","width","height","divbtnone","myButton","divbtntwo","audio","Audio","nowImportant","textToSpeech","_x","_textToSpeech","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isImportant","url","audioData","otherparam","currSource4","_args","wrap","_context","prev","next","length","undefined","input","voice","languageCode","name","ssmlGender","audioConfig","audioEncoding","speakingRate","headers","body","JSON","stringify","method","substring","addEventListener","fetch","then","fetchData","json","res","concat","audioContent","play","once","pause","err","abrupt","Promise","resolve","stop","stopTTS","load","getDevice","ua","navigator","userAgent","toLowerCase","indexOf","setNutrients","candidate","calories","NUTR_CONT1","carbohydrate","NUTR_CONT2","protein","NUTR_CONT3","fat","NUTR_CONT4","sugar","NUTR_CONT5","sodium","NUTR_CONT6","cholesterol","NUTR_CONT7","saturatedFat","NUTR_CONT8","transFat","NUTR_CONT9","result","nutrients","DESC_KOR","maker","MAKER_NAME","key","Video","videoRef","useEffect","device","mediaDevices","getUserMedia","video","facingMode","exact","getWebcam","stream","current","srcObject","ref","autoPlay","Canvas","forwardRef","props","canvas","Nutrients","productNum","setProductNum","_useState3","_useState4","isNumDetected","setIsNumDetected","_useState5","_useState6","resultArr","setResultArr","isFirstLoaded","useRef","search","canvasRef","getProductName","response","sent","I1250","total_count","row","PRDLST_NM","I1310","Error","getNutrients","_ref2","_callee2","productName","newName","_context2","replaceAll","I2790","_x2","window","speechSynthesis","getVoices","id","setInterval","ctx","getContext","drawImage","drawToCanvas","image","toDataURL","replace","formData","FormData","append","data","_toConsumableArray","sendImage","clearInterval","_getMode","arr","obj","forEach","resNum","repeatCnt","getMode","state","resNutrients","catch","readJson","jsonObject","_classCallCheck","this","_createClass","value","_readJsonObject","element","recommended","calorie","getRecommendedNutrient","nutrient","NuResult","useLocation","nuts","init","read","readJsonObject","Math","floor","Expiration","expiration","setExpiration","isDateDetected","setIsDateDetected","intervalId","dateDetected","cycleEnded","_ref3","_callee3","_context3","resDate","speechToText","_speechToText","interval","sttResult","b64AudioToString","recorder","_args3","audioBase64","results","config","encoding","audio_channel_count","content","alternatives","transcript","t0","MediaRecorder","start","setTimeout","event","reader","FileReader","readAsDataURL","onloadend","base64String","restaurantsList","Set","positiveResponse","ExResult","resText","setResText","location","speakDate","userRes","ttsText","has","setDate","Restaurant","params","displayText","setDisplayText","userRestaurant","userMenu","fetchNutrients","selectProduct","rawNutrients","isCorrectRes","_iterator","_step","nutrientsData","userResponse","_createForOfIteratorHelper","s","n","done","e","f","finish","_ref4","_callee4","_context4","ReResult","Help","center","prettytext","App","CookiesProvider","Router","Routes","Route","process","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3bf3be31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutlogo\":\"Home_aboutlogo__1fTLk\",\"myButton\":\"Home_myButton__jif71\",\"divbtnone\":\"Home_divbtnone__3ub7d\",\"divbtntwo\":\"Home_divbtntwo__GCwMW\",\"settingimg\":\"Home_settingimg__2SUpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Help_center__303jc\",\"prettytext\":\"Help_prettytext__2C3cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"Video_video__1ptc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__1-MPd\"};","import PropTypes from \"prop-types\";\r\n\r\nfunction Button({ text, onClick, classname }) {\r\n  return (\r\n    <button onClick={onClick} className={classname}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction ImgButton({ onClick, classname }) {\r\n  return <button onClick={onClick} className={classname}></button>;\r\n}\r\n\r\nImgButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImgButton;\r\n","export default __webpack_public_path__ + \"static/media/logo.27187399.jpg\";","import { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../components/Global/Button\";\r\nimport ImgButton from \"../components/Global/ImgButton\";\r\n//import { getSpeech } from \"../js/tts\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Logo from \"./logo.jpg\";\r\nimport styles from \"./Home.module.css\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path) => {\r\n    navigate(path);\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  //useEffect(() => getSpeech(\"Hello!\"), []);\r\n  let [modal, setModal] = useState(false);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ImgButton\r\n          className={styles.settingimg}\r\n          onClick={() => navigateTo(\"/Settings\")}\r\n        />\r\n      </div>\r\n      <div className={styles.aboutlogo}>\r\n        <img src={Logo} width={300} height={162}></img>\r\n      </div>\r\n      <div>\r\n        <div className={styles.divbtnone}>\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"영양성분\"\r\n            onClick={() => navigateTo(\"/nutrients\")}\r\n          />\r\n\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"유통기한\"\r\n            onClick={() => navigateTo(\"/expiration\")}\r\n          />\r\n        </div>\r\n        <div className={styles.divbtntwo}>\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"음식점\"\r\n            onClick={() => navigateTo(\"/restaurant\")}\r\n          />\r\n\r\n          <Button\r\n            classname={styles.myButton}\r\n            text=\"도움말\"\r\n            onClick={() => navigateTo(\"/help\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const audio = new Audio();\r\nlet nowImportant = true;\r\n\r\n//isImportant = true: 말을 끊지 않는다. false: 말을 끊는다.\r\nasync function textToSpeech(text, isImportant = true, speakRate = 1) {\r\n  const url =\r\n    \"https://texttospeech.googleapis.com/v1/text:synthesize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n  const audioData = {\r\n    input: {\r\n      text: text,\r\n    },\r\n    voice: {\r\n      languageCode: \"ko-KR\",\r\n      name: \"ko-KR-Neural2-c\",\r\n      ssmlGender: \"MALE\",\r\n    },\r\n    audioConfig: {\r\n      audioEncoding: \"MP3\",\r\n      speakingRate: speakRate,\r\n    },\r\n  };\r\n  const otherparam = {\r\n    headers: {\r\n      \"content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n    body: JSON.stringify(audioData),\r\n    method: \"POST\",\r\n  };\r\n  // 사운드 생성\r\n  try {\r\n    const currSource4 = audio.src.substring(0, 4);\r\n    if (nowImportant && currSource4 !== \"http\" && currSource4 !== \"\") {\r\n      //현재 재생되는 오디오가 중요할 때\r\n      audio.addEventListener(\r\n        \"ended\",\r\n        () => {\r\n          fetch(url, otherparam)\r\n            .then((fetchData) => fetchData.json())\r\n            .then((res) => {\r\n              audio.src = `data:audio/mp3;base64,${res.audioContent}`;\r\n              console.log(\"tts start!\");\r\n              audio.play();\r\n            });\r\n        },\r\n        { once: true }\r\n      );\r\n    } else {\r\n      //현재 재생되는 오디오가 중요하지 않을때 또는 오디오가 없을때\r\n      fetch(url, otherparam)\r\n        .then((fetchData) => fetchData.json())\r\n        .then((res) => {\r\n          audio.pause();\r\n          audio.src = `data:audio/mp3;base64,${res.audioContent}`;\r\n          console.log(\"tts start!\");\r\n          audio.play();\r\n          //console.log(\"play!\");\r\n          //console.log(\"curr\", audio.src);\r\n        });\r\n    }\r\n    nowImportant = isImportant;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    audio.addEventListener(\r\n      \"ended\",\r\n      () => {\r\n        console.log(\"tts end!\");\r\n        audio.src = \"\";\r\n        //console.log(\"now is\", audio.src);\r\n        resolve();\r\n      },\r\n      { once: true }\r\n    );\r\n  });\r\n}\r\n\r\nfunction stopTTS() {\r\n  audio.pause();\r\n  console.log(\"stop..\");\r\n  audio.src = \"\";\r\n  audio.load();\r\n}\r\n\r\nfunction getDevice() {\r\n  let ua = navigator.userAgent.toLowerCase();\r\n  if (ua.indexOf(\"android\") > -1) {\r\n    return \"android\";\r\n  } else if (\r\n    ua.indexOf(\"iphone\") > -1 ||\r\n    ua.indexOf(\"ipad\") > -1 ||\r\n    ua.indexOf(\"ipod\") > -1\r\n  ) {\r\n    return \"ios\";\r\n  } else {\r\n    return \"computer\";\r\n  }\r\n}\r\n\r\nfunction getSpeed() {\r\n  let device = getDevice();\r\n  if (device === \"ios\") return 1.2;\r\n  else if (device === \"android\") return 1.5;\r\n  else return 2;\r\n}\r\n\r\nexport { getSpeed, getDevice, textToSpeech, stopTTS };\r\n","/**\r\n *  function that returns sanitized nutrients data\r\n *  @param {object} candidate json.I2790.row[i]\r\n *  @return object{nuts: {name, maker, calories, nutrients}}\r\n */\r\nfunction setNutrients(candidate) {\r\n  if (candidate !== \"\") {\r\n    //set nutrients\r\n    const calories = candidate.NUTR_CONT1;\r\n    const carbohydrate = candidate.NUTR_CONT2;\r\n    const protein = candidate.NUTR_CONT3;\r\n    const fat = candidate.NUTR_CONT4;\r\n    const sugar = candidate.NUTR_CONT5;\r\n    const sodium = candidate.NUTR_CONT6;\r\n    const cholesterol = candidate.NUTR_CONT7;\r\n    const saturatedFat = candidate.NUTR_CONT8;\r\n    const transFat = candidate.NUTR_CONT9;\r\n\r\n    //output Object\r\n    const result = {};\r\n    const nutrients = {\r\n      name: candidate.DESC_KOR,\r\n      maker: candidate.MAKER_NAME,\r\n      calories: calories,\r\n      nutrients: {\r\n        carbohydrate: carbohydrate,\r\n        protein: protein,\r\n        fat: fat,\r\n        sugar: sugar,\r\n        sodium: sodium,\r\n        cholesterol: cholesterol,\r\n        saturatedFat: saturatedFat,\r\n        transFat: transFat,\r\n      },\r\n    };\r\n\r\n    //set zero default value\r\n    for (let key in nutrients.nutrients) {\r\n      if (nutrients.nutrients[key] === \"\") {\r\n        nutrients.nutrients[key] = \"0\";\r\n      }\r\n    }\r\n\r\n    //return\r\n    result[\"nuts\"] = nutrients;\r\n    return result;\r\n  }\r\n}\r\n\r\nfunction readNutrients(result) {}\r\n\r\nexport { setNutrients };\r\n","import { useEffect } from \"react\";\r\nimport { getDevice } from \"../../js/tts\";\r\nimport styles from \"./stylesheets/Video.module.css\";\r\n\r\nfunction Video({ videoRef }) {\r\n  const getWebcam = () => {\r\n    const device = getDevice();\r\n    if (device === \"android\" || device === \"ios\") {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n          facingMode: { exact: \"environment\" },\r\n        },\r\n        audio: false,\r\n      });\r\n    } else {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: 300,\r\n          height: 400,\r\n        },\r\n        audio: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWebcam().then((stream) => {\r\n      videoRef.current.srcObject = stream;\r\n    });\r\n  }, []);\r\n\r\n  return <video ref={videoRef} className={styles.video} autoPlay />;\r\n}\r\n\r\nexport default Video;\r\n","import { forwardRef } from \"react\";\r\nimport styles from \"./stylesheets/Canvas.module.css\";\r\n\r\nconst Canvas = forwardRef((props, ref) => {\r\n  return (\r\n    <canvas\r\n      ref={ref}\r\n      className={styles.canvas}\r\n      width=\"720\"\r\n      height=\"960\"\r\n    ></canvas>\r\n  );\r\n});\r\n\r\nexport default Canvas;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { stopTTS, textToSpeech } from \"./../../js/tts\";\r\nimport { setNutrients } from \"../../js/nutrientsHandle\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Nutrients() {\r\n  const [productNum, setProductNum] = useState(\"\");\r\n  const [isNumDetected, setIsNumDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/pummok\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isNumDetected) {\r\n              setIsNumDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  const getProductName = async (productNum) => {\r\n    //try: 일반 식품\r\n    let url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1250/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    let response = await fetch(url);\r\n    let json = await response.json();\r\n    if (json.I1250.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1250.row[0].PRDLST_NM;\r\n    }\r\n    console.log(\"not found first\");\r\n\r\n    //try: 축산물\r\n    url = `http://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I1310/json/1/1/PRDLST_REPORT_NO=${productNum}`;\r\n    response = await fetch(url);\r\n    json = await response.json();\r\n    if (json.I1310.total_count !== \"0\") {\r\n      console.log(json);\r\n      return json.I1310.row[0].PRDLST_NM;\r\n    }\r\n\r\n    //not found\r\n    throw new Error(\"productNumber not found\");\r\n  };\r\n\r\n  const getNutrients = async (productName) => {\r\n    //space to underbar\r\n    const newName = productName.replaceAll(\" \", \"_\");\r\n\r\n    //fetch nutrients by productName\r\n    const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/1/DESC_KOR=${newName}`;\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    //throw Error\r\n    if (json.I2790.total_count === \"0\") {\r\n      throw new Error(\"품목보고번호에 일치하는 제품이 없습니다.\");\r\n    }\r\n\r\n    console.log(json);\r\n    return setNutrients(json.I2790.row[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.speechSynthesis.getVoices();\r\n    textToSpeech(\"품목보고번호 탐색을 시작합니다.\", true);\r\n    const id = setInterval(() => {\r\n      if (search.current) {\r\n        drawToCanvas();\r\n        sendImage();\r\n      }\r\n    }, 350);\r\n    return () => {\r\n      clearInterval(id);\r\n      stopTTS();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isNumDetected) {\r\n      console.log(\"number detected!\");\r\n      textToSpeech(\"품목보고번호가 감지되었습니다.\", true);\r\n    }\r\n  }, [isNumDetected]);\r\n\r\n  useEffect(() => {\r\n    if (resultArr.length >= 10) {\r\n      search.current = false;\r\n      let { res, repeatCnt } = getMode(resultArr);\r\n      if (res === \"not found\") {\r\n        console.log(\"failed.. begin to search\");\r\n        textToSpeech(\"탐색중.\", false);\r\n        search.current = true;\r\n      } else {\r\n        console.log(\"success!\");\r\n        console.log(`found result is ${res}`);\r\n        setProductNum(res);\r\n      }\r\n      //init\r\n      setIsNumDetected(false);\r\n      setResultArr([]);\r\n    }\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && productNum !== \"\") {\r\n      getProductName(productNum)\r\n        .then((productName) => getNutrients(productName))\r\n        .then((nutrients) => {\r\n          console.log(nutrients);\r\n          setProductNum(\"\");\r\n          navigateTo(\"/nutrients/result\", { resNutrients: nutrients });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(\"product not found. begin to search.\");\r\n          textToSpeech(\"일치하는 상품이 없습니다. 재탐색합니다.\", true);\r\n          setProductNum(\"\");\r\n          search.current = true;\r\n        });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [productNum]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  //console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Nutrients;\r\n","import { textToSpeech } from \"./tts\";\r\n\r\nexport class readJson {\r\n  constructor(jsonObject) {\r\n    this.jsonObject = jsonObject;\r\n  }\r\n\r\n  async readJsonObject() {\r\n    let element = this.jsonObject;\r\n    let name = element.name;\r\n    let calories = element.calories;\r\n    let carbohydrate = element.nutrients.carbohydrate;\r\n    let protein = element.nutrients.protein;\r\n    let fat = element.nutrients.fat;\r\n    let sugar = element.nutrients.sugar;\r\n    let sodium = element.nutrients.sodium;\r\n    let cholesterol = element.nutrients.cholesterol;\r\n    let saturatedFat = element.nutrients.saturatedFat;\r\n    let transFat = element.nutrients.transFat;\r\n    await textToSpeech(\"상품명 \" + name);\r\n    await textToSpeech(\"칼로리 \" + calories + \"칼로리\");\r\n    await textToSpeech(\"탄수화물 \" + carbohydrate + \"그램\");\r\n    await textToSpeech(\"단백질 \" + protein + \"그램\");\r\n    await textToSpeech(\"지방 \" + fat + \"그램\");\r\n    await textToSpeech(\"당류 \" + sugar + \"그램\");\r\n    await textToSpeech(\"나트륨 \" + sodium + \"밀리그램\");\r\n    await textToSpeech(\"콜레스테롤 \" + cholesterol + \"밀리그램\");\r\n    await textToSpeech(\"포화지방 \" + saturatedFat + \"그램\");\r\n    await textToSpeech(\"트랜스지방 \" + transFat + \"그램\");\r\n  }\r\n}\r\n","const recommended = {\r\n    calorie: 2000,\r\n    protein: 60,\r\n    fat: 60,\r\n    carbohydrate: 300\r\n}\r\n\r\nexport function getRecommendedNutrient(nutrient) {\r\n    return recommended[nutrient];\r\n}\r\n\r\nexport default recommended;","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect } from \"react\";\r\nimport { readJson } from \"../../js/read\";\r\nimport { getRecommendedNutrient } from \"../../js/recommended\";\r\n\r\nfunction NuResult() {\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await textToSpeech(\"제품을 찾았습니다.\");\r\n      const read = new readJson(result);\r\n      await read.readJsonObject();\r\n      let calorie = Math.floor((result.calories/getRecommendedNutrient(\"calorie\")));\r\n      let carbohydrate = Math.floor(result.nutrients.carbohydrate/getRecommendedNutrient(\"carbohydrate\"));\r\n      let protein = Math.floor(result.nutrients.protein/getRecommendedNutrient(\"protein\"));\r\n      let fat = Math.floor(result.nutrients.fat/getRecommendedNutrient(\"fat\"));\r\n      await textToSpeech(calorie*100+ \"퍼센트의 칼로리를 섭취하였습니다.\");\r\n      await textToSpeech(carbohydrate*100 + \"퍼센트의 탄수화물을 섭취하였습니다.\");\r\n      await textToSpeech(protein*100 + \"퍼센트의 단백질을 섭취하였습니다.\");\r\n      await textToSpeech(fat*100 + \"퍼센트의 지방을 섭취하였습니다.\");\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NuResult;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech, stopTTS } from \"../../js/tts\";\r\nimport Video from \"../../components/Global/Video\";\r\nimport Canvas from \"../../components/Global/Canvas\";\r\n\r\nfunction Expiration() {\r\n  const [expiration, setExpiration] = useState(\"\");\r\n  const [isDateDetected, setIsDateDetected] = useState(false);\r\n  const [resultArr, setResultArr] = useState([]);\r\n\r\n  const isFirstLoaded = useRef(true);\r\n  const search = useRef(true);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const drawToCanvas = () => {\r\n    try {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx !== null && videoRef.current) {\r\n        ctx.drawImage(videoRef.current, 0, 0, 300, 400);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const sendImage = () => {\r\n    try {\r\n      if (canvasRef.current) {\r\n        const image = canvasRef.current\r\n          .toDataURL()\r\n          .replace(\"data:image/png;base64,\", \"\");\r\n        let formData = new FormData();\r\n        formData.append(\"imageInfo\", image);\r\n\r\n        fetch(\"https://0917ba2.pythonanywhere.com/utong\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //console.log(data.result);\r\n            if (data.result !== \"not found\" && !isDateDetected) {\r\n              setIsDateDetected(true);\r\n            }\r\n            setResultArr((current) => [...current, data.result]);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    //console.log(image);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let intervalId = 0;\r\n    const init = async () => {\r\n      await textToSpeech(\"유통기한 탐색을 시작합니다.\", true);\r\n      const id = setInterval(() => {\r\n        if (intervalId === 0) intervalId = id;\r\n        //console.log(\"hahaha\");\r\n        drawToCanvas();\r\n        sendImage();\r\n      }, 250);\r\n    };\r\n\r\n    init();\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      stopTTS();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dateDetected = async () => {\r\n      if (isDateDetected) {\r\n        console.log(\"date detected!\");\r\n        await textToSpeech(\"유통기한이 감지되었습니다.\", true);\r\n      }\r\n    };\r\n\r\n    dateDetected();\r\n  }, [isDateDetected]);\r\n\r\n  useEffect(() => {\r\n    const cycleEnded = async () => {\r\n      const init = () => {\r\n        setIsDateDetected(false);\r\n        setResultArr([]);\r\n      };\r\n\r\n      if (resultArr.length >= 10) {\r\n        search.current = false;\r\n        let { res, repeatCnt } = getMode(resultArr);\r\n        if (res === \"not found\") {\r\n          console.log(\"failed.. begin to search\");\r\n          search.current = true;\r\n          init();\r\n          await textToSpeech(\"탐색중.\", false);\r\n        } else {\r\n          console.log(\"success!\");\r\n          console.log(`found result is ${res}`);\r\n          init();\r\n          setExpiration(res);\r\n        }\r\n      }\r\n    };\r\n\r\n    cycleEnded();\r\n  }, [resultArr]);\r\n\r\n  useEffect(() => {\r\n    //console.log(isFirstLoaded.current);\r\n    if (!isFirstLoaded.current && expiration !== \"\") {\r\n      console.log(`Expiration Date is ${expiration}`);\r\n      navigateTo(\"/expiration/result\", { resDate: expiration });\r\n    } else {\r\n      isFirstLoaded.current = false;\r\n    }\r\n  }, [expiration]);\r\n\r\n  return (\r\n    <div>\r\n      <Video videoRef={videoRef} />\r\n      <Canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//get mode value of Array: arr\r\nfunction getMode(arr) {\r\n  let obj = {};\r\n  arr.forEach((res) => {\r\n    obj[res] = obj[res] === undefined ? 1 : obj[res] + 1;\r\n  });\r\n  console.log(obj);\r\n  let res = \"\";\r\n  let resNum = 0;\r\n  for (let key in obj) {\r\n    //console.log(key);\r\n    if (resNum < obj[key]) {\r\n      res = key;\r\n      resNum = obj[key];\r\n    }\r\n  }\r\n  return { res: res, repeatCnt: resNum };\r\n}\r\n\r\nexport default Expiration;\r\n","async function speechToText(interval = 3000) {\r\n  //final return value\r\n  let sttResult = \"\";\r\n\r\n  //audioBase64: plain b64 string\r\n  const b64AudioToString = async (audioBase64) => {\r\n    const url =\r\n      \"https://speech.googleapis.com/v1/speech:recognize?key=AIzaSyCxnSFvcQd6a17xfB4nDwDafJH_juHSNA0\";\r\n\r\n    // POST data\r\n    const data = {\r\n      config: {\r\n        encoding: \"WEBM_OPUS\",\r\n        languageCode: \"ko-KR\",\r\n        audio_channel_count: 1,\r\n      },\r\n      audio: {\r\n        content: audioBase64,\r\n      },\r\n    };\r\n\r\n    // POST request\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const results = await response.json();\r\n\r\n    //return text\r\n    try {\r\n      return results.results[0].alternatives[0].transcript;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // input stream\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    audio: true,\r\n    video: false,\r\n  });\r\n\r\n  //input recorder\r\n  const recorder = new MediaRecorder(stream);\r\n\r\n  //start & stop recording\r\n  return new Promise((resolve) => {\r\n    console.log(\"recording start!\");\r\n    recorder.start();\r\n\r\n    setTimeout(() => {\r\n      recorder.stop();\r\n      console.log(\"recording stop!\");\r\n    }, interval);\r\n\r\n    recorder.addEventListener(\r\n      \"dataavailable\",\r\n      (event) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(event.data);\r\n\r\n        reader.onloadend = async () => {\r\n          const base64String = reader.result.replace(\r\n            \"data:audio/webm;codecs=opus;base64,\",\r\n            \"\"\r\n          );\r\n          sttResult = await b64AudioToString(base64String);\r\n          console.log(sttResult);\r\n          resolve(sttResult);\r\n        };\r\n      },\r\n      { once: true }\r\n    );\r\n  });\r\n}\r\n\r\nexport { speechToText };\r\n","const restaurantsList = new Set([\r\n  \"도미노피자\",\r\n  \"피자헛\",\r\n  \"미스터피자\",\r\n  \"피자에땅\",\r\n  \"피자알볼로\",\r\n  \"알볼로\",\r\n  \"뽕뜨락피자\",\r\n  \"카페띠아모\",\r\n  \"못난이꽈배기\",\r\n  \"코코호도\",\r\n  \"크리스피크림도넛\",\r\n  \"크리스피크림\",\r\n  \"요거프레소\",\r\n  \"카페베네\",\r\n  \"탐앤탐스\",\r\n  \"커피마마\",\r\n  \"투썸플레이스\",\r\n  \"파스쿠찌\",\r\n  \"7번가피자\",\r\n  \"칠번가피자\",\r\n  \"파파존스\",\r\n  \"롯데리아\",\r\n  \"토프레소\",\r\n  \"배스킨라빈스\",\r\n  \"피자스쿨\",\r\n  \"공차\",\r\n  \"스타벅스\",\r\n  \"앤티앤스프레즐\",\r\n  \"앤티앤스\",\r\n  \"카페 봄봄\",\r\n  \"이디야커피\",\r\n  \"이디야\",\r\n  \"목우촌참피자\",\r\n  \"난타5000\",\r\n  \"난타오천\",\r\n  \"반올림피자샵\",\r\n  \"반올림피자\",\r\n  \"빽다방\",\r\n  \"백다방\",\r\n  \"백따방\",\r\n  \"빽따방\",\r\n  \"커피빈\",\r\n  \"앤젤리너스\",\r\n  \"앤젤리너스커피\",\r\n  \"드롭탑\",\r\n  \"드롭탑커피\",\r\n  \"할리스커피\",\r\n  \"할리스\",\r\n  \"커피베이\",\r\n  \"XOXO핫도그&커피\",\r\n  \"파리바게뜨\",\r\n  \"파리바게트\",\r\n  \"피자마루\",\r\n  \"오구피자\",\r\n  \"서브웨이\",\r\n  \"맥도날드\",\r\n  \"버거킹\",\r\n  \"맘스터치\",\r\n  \"KFC\",\r\n  \"피자나라치킨공주\",\r\n  \"던킨도너츠\",\r\n  \"뚜레쥬르\",\r\n  \"메가커피\",\r\n  \"커피에 반하다\",\r\n  \"삼삼한밥상\",\r\n  \"고피자\",\r\n  \"피자헤븐\",\r\n  \"눈꽃치즈떡볶이\",\r\n  \"스트릿츄러스\",\r\n  \"꾸브라꼬 숯불두마리 치킨\",\r\n  \"꾸브라꼬\",\r\n  \"쿡솜씨\",\r\n  \"프레시지\",\r\n]);\r\n\r\nconst positiveResponse = new Set([\r\n  \"네\",\r\n  \"넵\",\r\n  \"옙\",\r\n  \"예\",\r\n  \"맞아요\",\r\n  \"맞습니다\",\r\n  \"맞아\",\r\n  \"그래\",\r\n  \"응\",\r\n  \"어\",\r\n  \"맞을걸요\",\r\n  \"맞음\",\r\n]);\r\n\r\nconst negativeResponse = new Set([\r\n  \"아니\",\r\n  \"아니요\",\r\n  \"아니오\",\r\n  \"아닙니다\",\r\n  \"아닐걸요\",\r\n  \"아닌데\",\r\n  \"아님\",\r\n  \"아니에요\",\r\n  \"아냐\",\r\n  \"아뇨\",\r\n  \"아녀\",\r\n]);\r\n\r\nexport { restaurantsList, positiveResponse, negativeResponse };\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\nimport { positiveResponse } from \"../../js/sttHandle\";\r\n\r\nfunction ExResult() {\r\n  const [resText, setResText] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setDate = () => {\r\n      let resDate = location.state.resDate;\r\n      resDate = resDate.replace(\"-\", \"년 \");\r\n      resDate = resDate.replace(\"-\", \"월 \");\r\n      resDate += \"일\";\r\n      console.log(resDate);\r\n      return resDate;\r\n    };\r\n\r\n    const speakDate = async () => {\r\n      await textToSpeech(ttsText);\r\n      console.log(\"first\");\r\n      await textToSpeech(\"다시 들려드릴까요?\", true);\r\n      console.log(\"second\");\r\n      const userRes = await speechToText(3000);\r\n      if (positiveResponse.has(userRes)) {\r\n        speakDate();\r\n      } else {\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\", true);\r\n        navigateTo(\"/2023-ISHS-JRH\");\r\n      }\r\n    };\r\n\r\n    const resDate = setDate();\r\n    const ttsText = `상품의 유통기한은 ${resDate} 입니다.`;\r\n    setResText(ttsText);\r\n\r\n    speakDate();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{resText}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExResult;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech, stopTTS } from \"../../js/tts\";\r\nimport { speechToText } from \"../../js/stt\";\r\nimport { setNutrients } from \"../../js/nutrientsHandle\";\r\nimport { restaurantsList, positiveResponse } from \"../../js/sttHandle\";\r\n\r\nfunction Restaurant() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n\r\n  const [displayText, setDisplayText] = useState(\"\");\r\n\r\n  let userRestaurant = \"\";\r\n  let userMenu = \"\";\r\n\r\n  const getNutrients = async () => {\r\n    const fetchNutrients = async () => {\r\n      const url = `https://openapi.foodsafetykorea.go.kr/api/8afc960ac75f4a4e9426/I2790/json/1/100/DESC_KOR=${userMenu}&MAKER_NAME=${userRestaurant}`;\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n\r\n      if (json.I2790.total_count === \"0\") {\r\n        setDisplayText(\"찾으시는 제품이 없습니다...\");\r\n        await textToSpeech(\"찾으시는 제품이 없습니다...\");\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\");\r\n        return null;\r\n      } else {\r\n        return json;\r\n      }\r\n    };\r\n\r\n    const selectProduct = async () => {\r\n      let isCorrectRes = false;\r\n      let nutrients = null;\r\n      for (const nutrientsData of rawNutrients.I2790.row) {\r\n        setDisplayText(`찾으시는 메뉴가 ${nutrientsData.DESC_KOR} 인가요?`);\r\n        await textToSpeech(`찾으시는 메뉴가 ${nutrientsData.DESC_KOR} 인가요?`);\r\n\r\n        const userResponse = await speechToText(2500);\r\n        if (positiveResponse.has(userResponse)) {\r\n          nutrients = setNutrients(nutrientsData);\r\n          console.log(nutrients);\r\n          isCorrectRes = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isCorrectRes) {\r\n        navigateTo(\"/restaurant/result\", { resNutrients: nutrients });\r\n      } else {\r\n        setDisplayText(\"찾으시는 메뉴가 존재하지 않습니다...\");\r\n        await textToSpeech(\"찾으시는 메뉴가 존재하지 않습니다...\");\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\");\r\n        navigateTo(\"/2023-ISHS-JRH\");\r\n      }\r\n    };\r\n\r\n    const rawNutrients = await fetchNutrients();\r\n    if (rawNutrients !== null) selectProduct();\r\n    else navigateTo(\"/2023-ISHS-JRH\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      console.log(\"init started!\");\r\n\r\n      setDisplayText(\"방문하신 매장의 이름을 말씀해주세요.\");\r\n      await textToSpeech(\"방문하신 매장의 이름을 말씀해주세요.\");\r\n      userRestaurant = await speechToText(3000);\r\n\r\n      if (restaurantsList.has(userRestaurant)) {\r\n        setDisplayText(\"주문하실 메뉴의 이름을 말씀해주세요.\");\r\n        await textToSpeech(\"주문하실 메뉴의 이름을 말씀해주세요.\");\r\n        userMenu = await speechToText(3000);\r\n        getNutrients();\r\n      } else {\r\n        setDisplayText(\"찾으시는 매장이 존재하지 않습니다...\");\r\n        await textToSpeech(\"찾으시는 매장이 존재하지 않습니다...\");\r\n        await textToSpeech(\"첫 화면으로 이동합니다.\");\r\n        navigateTo(\"/2023-ISHS-JRH\");\r\n      }\r\n    };\r\n\r\n    init();\r\n    return () => stopTTS();\r\n  }, []);\r\n\r\n  return <div>{displayText}</div>;\r\n}\r\n\r\nexport default Restaurant;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { textToSpeech } from \"./../../js/tts\";\r\nimport { useEffect } from \"react\";\r\nimport { readJson } from \"../../js/read\";\r\nimport { getRecommendedNutrient } from \"../../js/recommended\";\r\n\r\nfunction ReResult() {\r\n  const location = useLocation();\r\n  const result = location.state.resNutrients.nuts;\r\n  const nutrients = result.nutrients;\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await textToSpeech(\"메뉴를 찾았습니다.\");\r\n      const read = new readJson(result);\r\n      await read.readJsonObject();\r\n      let calorie = Math.floor((result.calories/getRecommendedNutrient(\"calorie\"))*1000);\r\n      let carbohydrate = Math.floor((result.nutrients.carbohydrate/getRecommendedNutrient(\"carbohydrate\"))*1000);\r\n      let protein = Math.floor((result.nutrients.protein/getRecommendedNutrient(\"protein\"))*1000);\r\n      let fat = Math.floor((result.nutrients.fat/getRecommendedNutrient(\"fat\"))*1000);\r\n      await textToSpeech(calorie/10+ \"퍼센트의 칼로리를 섭취하였습니다.\");\r\n      await textToSpeech(carbohydrate/10 + \"퍼센트의 탄수화물을 섭취하였습니다.\");\r\n      await textToSpeech(protein/10 + \"퍼센트의 단백질을 섭취하였습니다.\");\r\n      await textToSpeech(fat/10 + \"퍼센트의 지방을 섭취하였습니다.\");\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>상품명: {result.name}</h1>\r\n      <ul>\r\n        <li>칼로리: {result.calories}kcal</li>\r\n        <li>탄수화물: {nutrients.carbohydrate}g</li>\r\n        <li>단백질: {nutrients.protein}g</li>\r\n        <li>지방: {nutrients.fat}g</li>\r\n        <li>당류: {nutrients.sugar}g</li>\r\n        <li>나트륨: {nutrients.sodium}mg</li>\r\n        <li>콜레스테롤: {nutrients.cholesterol}mg</li>\r\n        <li>포화지방: {nutrients.saturatedFat}g</li>\r\n        <li>트랜스지방: {nutrients.transFat}g</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReResult;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { textToSpeech } from \"../../js/tts\";\r\nimport styles from \"./Help.module.css\";\r\n\r\nfunction Help() {\r\n  const navigate = useNavigate();\r\n  const navigateTo = (path, params) => {\r\n    navigate(path, { state: params });\r\n    console.log(\"Redirecting...\");\r\n  };\r\n  return (\r\n    <div className={styles.center}>\r\n      <h1 className={styles.prettytext}> 도움말 </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Help;\r\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Home from \"./routes/Home\";\r\nimport Nutrients from \"./routes/Nutrients/Nutrients\";\r\nimport NuResult from \"./routes/Nutrients/NuResult\";\r\nimport Expiration from \"./routes/Expiration/Expiration\";\r\nimport ExResult from \"./routes/Expiration/ExResult\";\r\nimport Restaurant from \"./routes/Restaurant/Restaurant\";\r\nimport ReResult from \"./routes/Restaurant/ReResult\";\r\nimport Help from \"./routes/Help/Help\";\r\nimport { CookiesProvider } from \"react-cookie\";\r\n\r\nfunction App() {\r\n  //<Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n\r\n  return (\r\n    <CookiesProvider>\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/nutrients/result\" element={<NuResult />} />\r\n        <Route path=\"/nutrients\" element={<Nutrients />} />\r\n        <Route path=\"/expiration/result\" element={<ExResult />} />\r\n        <Route path=\"/expiration\" element={<Expiration />} />\r\n        <Route path=\"/restaurant\" element={<Restaurant />} />\r\n        <Route path=\"/restaurant/result\" element={<ReResult />} />\r\n        <Route path=\"/help\" element={<Help />} />\r\n        <Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\r\n      </Routes>\r\n    </Router>\r\n    </CookiesProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}